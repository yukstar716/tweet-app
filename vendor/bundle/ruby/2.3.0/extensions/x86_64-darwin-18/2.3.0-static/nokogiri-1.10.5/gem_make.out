current directory: /Users/matsumotoyuki/Project/ruby_on_rails/tweet-app/vendor/bundle/ruby/2.3.0/gems/nokogiri-1.10.5/ext/nokogiri
/Users/matsumotoyuki/.rbenv/versions/2.3.7/bin/ruby -r ./siteconf20191112-51881-qrxssp.rb extconf.rb
checking if the C compiler accepts  -I /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/libxml2... yes
checking if the C compiler accepts -Wno-error=unused-command-line-argument-hard-error-in-future... no
Building nokogiri using packaged libraries.
Using mini_portile version 2.4.0
checking for iconv.h... yes
checking for gzdopen() in -lz... yes
checking for iconv using --with-iconv-* flags... yes
************************************************************************
IMPORTANT NOTICE:

Building Nokogiri with a packaged version of libxml2-2.9.10
with the following patches applied:
	- 0001-Revert-Do-not-URI-escape-in-server-side-includes.patch
	- 0002-Remove-script-macro-support.patch
	- 0003-Update-entities-to-remove-handling-of-ssi.patch

Team Nokogiri will keep on doing their best to provide security
updates in a timely manner, but if this is a concern for you and want
to use the system library instead; abort this installation process and
reinstall nokogiri as follows:

    gem install nokogiri -- --use-system-libraries
        [--with-xml2-config=/path/to/xml2-config]
        [--with-xslt-config=/path/to/xslt-config]

If you are using Bundler, tell it to use the option:

    bundle config build.nokogiri --use-system-libraries
    bundle install

Note, however, that nokogiri is not fully compatible with arbitrary
versions of libxml2 provided by OS/package vendors.
************************************************************************
Extracting libxml2-2.9.10.tar.gz into tmp/x86_64-apple-darwin18.2.0/ports/libxml2/2.9.10... OK
Running git apply with /Users/matsumotoyuki/Project/ruby_on_rails/tweet-app/vendor/bundle/ruby/2.3.0/gems/nokogiri-1.10.5/patches/libxml2/0001-Revert-Do-not-URI-escape-in-server-side-includes.patch... OK
Running git apply with /Users/matsumotoyuki/Project/ruby_on_rails/tweet-app/vendor/bundle/ruby/2.3.0/gems/nokogiri-1.10.5/patches/libxml2/0002-Remove-script-macro-support.patch... OK
Running git apply with /Users/matsumotoyuki/Project/ruby_on_rails/tweet-app/vendor/bundle/ruby/2.3.0/gems/nokogiri-1.10.5/patches/libxml2/0003-Update-entities-to-remove-handling-of-ssi.patch... OK
Running 'configure' for libxml2 2.9.10... OK
Running 'compile' for libxml2 2.9.10... OK
Running 'install' for libxml2 2.9.10... OK
Activating libxml2 2.9.10 (from /Users/matsumotoyuki/Project/ruby_on_rails/tweet-app/vendor/bundle/ruby/2.3.0/gems/nokogiri-1.10.5/ports/x86_64-apple-darwin18.2.0/libxml2/2.9.10)...
************************************************************************
IMPORTANT NOTICE:

Building Nokogiri with a packaged version of libxslt-1.1.34.

Team Nokogiri will keep on doing their best to provide security
updates in a timely manner, but if this is a concern for you and want
to use the system library instead; abort this installation process and
reinstall nokogiri as follows:

    gem install nokogiri -- --use-system-libraries
        [--with-xml2-config=/path/to/xml2-config]
        [--with-xslt-config=/path/to/xslt-config]

If you are using Bundler, tell it to use the option:

    bundle config build.nokogiri --use-system-libraries
    bundle install
************************************************************************
Extracting libxslt-1.1.34.tar.gz into tmp/x86_64-apple-darwin18.2.0/ports/libxslt/1.1.34... OK
Running 'configure' for libxslt 1.1.34... OK
Running 'compile' for libxslt 1.1.34... OK
Running 'install' for libxslt 1.1.34... OK
Activating libxslt 1.1.34 (from /Users/matsumotoyuki/Project/ruby_on_rails/tweet-app/vendor/bundle/ruby/2.3.0/gems/nokogiri-1.10.5/ports/x86_64-apple-darwin18.2.0/libxslt/1.1.34)...
checking for main() in -llzma... yes
checking for xmlParseDoc() in libxml/parser.h... no
checking for xmlParseDoc() in -lxml2... no
checking for xmlParseDoc() in -llibxml2... no
-----
libxml2 is missing.  Please locate mkmf.log to investigate how it is failing.
-----
*** extconf.rb failed ***
Could not create Makefile due to some reason, probably lack of necessary
libraries and/or headers.  Check the mkmf.log file for more details.  You may
need configuration options.

Provided configuration options:
	--with-opt-dir
	--without-opt-dir
	--with-opt-include
	--without-opt-include=${opt-dir}/include
	--with-opt-lib
	--without-opt-lib=${opt-dir}/lib
	--with-make-prog
	--without-make-prog
	--srcdir=.
	--curdir
	--ruby=/Users/matsumotoyuki/.rbenv/versions/2.3.7/bin/$(RUBY_BASE_NAME)
	--help
	--clean
	--use-system-libraries
	--enable-static
	--disable-static
	--with-zlib-dir
	--without-zlib-dir
	--with-zlib-include
	--without-zlib-include=${zlib-dir}/include
	--with-zlib-lib
	--without-zlib-lib=${zlib-dir}/lib
	--enable-cross-build
	--disable-cross-build
	--with-xml2lib
	--without-xml2lib
	--with-libxml2lib
	--without-libxml2lib

To see why this extension failed to compile, please check the mkmf.log which can be found here:

  /Users/matsumotoyuki/Project/ruby_on_rails/tweet-app/vendor/bundle/ruby/2.3.0/extensions/x86_64-darwin-18/2.3.0-static/nokogiri-1.10.5/mkmf.log

extconf failed, exit code 1
